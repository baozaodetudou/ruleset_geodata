name: Build ruleset and geodata
on:
  workflow_dispatch:
  schedule:
    - cron: "30 18 * * *"
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"
      - ".github/workflows/delete-old-workflows.yml"
      - ".github/workflows/config.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "update_version=$(date -d '+8 hours' +%Y-%m-%d)" >> ${GITHUB_ENV}
          echo "netflixip=https://raw.githubusercontent.com/DustinWin/geoip/ips/netflix.txt" >> $GITHUB_ENV
          echo "telegramip=https://raw.githubusercontent.com/DustinWin/geoip/ips/telegram.txt" >> $GITHUB_ENV
          echo "privateip=https://raw.githubusercontent.com/DustinWin/geoip/ips/private.txt" >> $GITHUB_ENV
          echo "cnip=https://raw.githubusercontent.com/DustinWin/geoip/ips/cn.txt" >> $GITHUB_ENV
        shell: bash

      - name: Clone Repository
        uses: actions/checkout@master

      - name: Checkout v2fly/domain-list-community
        uses: actions/checkout@v4
        with:
          repository: v2fly/domain-list-community
          path: community

      - name: Checkout DustinWin/geoip
        uses: actions/checkout@v4
        with:
          repository: DustinWin/geoip
          ref: ips
          path: geoip/ips

      - name: Checkout DustinWin/geoip
        uses: actions/checkout@v4
        with:
          repository: DustinWin/geoip
          ref: clash
          path: geoip/clash

      - name: Checkout DustinWin/geoip
        uses: actions/checkout@v4
        with:
          repository: DustinWin/geoip
          ref: sing-box
          path: geoip/sing-box

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache-dependency-path: ./community/go.sum

      - name: Generate `clash` geodata
        run: |
          mkdir -p ./community/mydata/ ./domains/
          archs1=(ads private microsoft-cn apple-cn google-cn games-cn networktest proxy cn)
          archs2=(netflix disney max primevideo appletv youtube tiktok bilibili ai)

          # Generate `clash` geosite-all.dat
          for((i=0;i<9;i++)); do
            curl -sSL "https://raw.githubusercontent.com/DustinWin/domain-list-custom/domains/${archs1[i]}.list" | sed 's/^DOMAIN,/full:/' | sed 's/^DOMAIN-SUFFIX,//' | sed 's/^DOMAIN-KEYWORD,/keyword:/' > "./community/mydata/${archs1[i]}"
            curl -sSL "https://raw.githubusercontent.com/DustinWin/domain-list-custom/domains/${archs2[i]}.list" | sed 's/^DOMAIN,/full:/' | sed 's/^DOMAIN-SUFFIX,//' | sed 's/^DOMAIN-KEYWORD,/keyword:/' > "./community/mydata/${archs2[i]}"
          done
          cd ./community/
          go run ./ --datapath=./mydata/ --outputname geosite-all.dat

          # Copy `mydata` domains (complete) to `domains`
          # for file in $(ls ./mydata/); do
            # cp -f "${file}" "../domains/${file}.txt"
          # done

          # Generate `clash` geosite-all-lite.dat
          rm -f ./mydata/ads
          go run ./ --datapath=./mydata/ --outputname geosite-all-lite.dat

          # Generate `clash` geosite.dat
          rm -f ./mydata/*
          for((i=0;i<9;i++)); do
            curl -sSL "https://raw.githubusercontent.com/DustinWin/domain-list-custom/domains/${archs1[i]}.list" | sed 's/^DOMAIN,/full:/' | sed 's/^DOMAIN-SUFFIX,//' | sed 's/^DOMAIN-KEYWORD,/keyword:/' > "./mydata/${archs1[i]}"
          done
          go run ./ --datapath=./mydata/ --outputname geosite.dat

          # Generate `clash` geosite-lite.dat
          rm -f ./mydata/ads
          go run ./ --datapath=./mydata/ --outputname geosite-lite.dat

      - name: Generate `sing-box` geodata
        run: |
          cd ./community/ || exit 1
          go install -trimpath -ldflags="-s -w -buildid=" github.com/metacubex/geo/cmd/geo@master
          for file in $(ls *.dat | sed 's/\..*//'); do
            geo convert site -i v2ray -o sing -f "./${file}.db" "./${file}.dat"
          done

      - name: Move `clash` and `sing-box` geodata files
        run: |
          mkdir -p ./clash/ ./sing-box/
          cd ./community/ || exit 1
          for file in $(ls *.dat); do
            install -Dp "./${file}" ../clash/
          done
          for file in $(ls *.db); do
            install -Dp "./${file}" ../sing-box/
          done
          rm -rf ../community*

      - name: Get geoip relative files
        run: |
          mkdir -p ./ips/
          cp -f ./geoip/ips/* ./ips/
          cp -f ./geoip/clash/* ./clash/
          cp -f ./geoip/sing-box/* ./sing-box/
          rm -rf ./geoip*

      - name: Generate `clash` rule-set
        run: |
          mkdir -p ./clash-ruleset/ ./sing-box-ruleset/
          archs=(ads private microsoft-cn apple-cn google-cn games-cn netflix disney max primevideo appletv youtube tiktok bilibili ai proxy cn)

          # Generate `clash` rule-set (yaml)
          for((i=0;i<17;i++)); do
            echo 'payload:' > "./clash-ruleset/${archs[i]}.yaml"
            curl -sSL "https://raw.githubusercontent.com/DustinWin/domain-list-custom/domains/${archs[i]}.list" | grep -v 'DOMAIN-KEYWORD,' | sed "s/^DOMAIN,/  - '/" | sed "s/^DOMAIN-SUFFIX,/  - '+\./" | sed "s/$/'/" >> "./clash-ruleset/${archs[i]}.yaml"
          done
          echo 'payload:' > ./clash-ruleset/applications.yaml
          curl -sSL https://raw.githubusercontent.com/DustinWin/domain-list-custom/domains/applications.list | sed 's/^/  - /' >> ./clash-ruleset/applications.yaml
          echo 'payload:' > ./clash-ruleset/networktest.yaml
          curl -sSL https://raw.githubusercontent.com/DustinWin/domain-list-custom/domains/networktest.list | sed 's/^/  - /' >> ./clash-ruleset/networktest.yaml

          # Generate `clash` rule-set (text)
          for((i=0;i<17;i++)); do
            curl -sSL "https://raw.githubusercontent.com/DustinWin/domain-list-custom/domains/${archs[i]}.list" | grep -v 'DOMAIN-KEYWORD,' | sed 's/^DOMAIN,//' | sed 's/^DOMAIN-SUFFIX,/+\./' > "./clash-ruleset/${archs[i]}.list"
          done
          curl -sSL https://raw.githubusercontent.com/DustinWin/domain-list-custom/domains/applications.list > ./clash-ruleset/applications.list
          curl -sSL https://raw.githubusercontent.com/DustinWin/domain-list-custom/domains/networktest.list > ./clash-ruleset/networktest.list

          # Ready for generate `sing-box` rule_set
          for((i=0;i<18;i++)); do
            curl "https://raw.githubusercontent.com/DustinWin/domain-list-custom/domains/${archs[i]}.list" > "./sing-box-rules/${archs[i]}/${archs[i]}.yaml"
          done

      - name: Download and unzip `sing-box core`
        run: |
          sing_box_version=$(curl -sSL https://api.github.com/repos/SagerNet/sing-box/releases | grep 'tag_name' | grep 'rc' | head -n 1 | sed 's/.*v//' | sed 's/".*//')
          wget "https://github.com/SagerNet/sing-box/releases/download/v${sing_box_version}/sing-box-${sing_box_version}-linux-amd64.tar.gz" -O - | tar -zxf - -C ./tmp/
          cp -f ./tmp/sing-box-${sing_box_version}-linux-amd64/sing-box ./tmp/sing-box/

      - name: Generate `sing-box` rule_set
        run: |
          curl -sSL https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/master/resouces/bm7.sh | sed '/# 拉文件/,/# 处理文件/d' | sed 's|./rule/Clash/|./sing-box-rules/|' | grep -v 'DOMAIN-SUFFIX,\/\/g' | sed 's/DOMAIN-SUFFIX,\/.\/g/DOMAIN-SUFFIX,\/\/g/' | sed "s/DOMAIN,\/\/g' >>/DOMAIN,\/\/g' >/" > ./tmp/sing-box/bm7.sh
          cd ./tmp/sing-box/
          chmod +x bm7.sh && ./bm7.sh
          rm -rf ./bm7* ./sing-box* ./sing-box-rules*
          cp -f * ../../sing-box-ruleset
          rm -rf ../../tmp*

      - name: Commit and push `domains` branch
        run: |
          cd ./domains/ || exit 1
          git init
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git checkout -b domains
          git add . && git commit -m "域名列表更新于 ${update_version}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin domains

      - name: Commit and push `ips` branch
        run: |
          cd ./ips/ || exit 1
          git init
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git checkout -b ips
          git add . && git commit -m "IP 段列表更新于 ${update_version}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin ips

      - name: Release and upload `clash` assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: clash
          tag: clash
          overwrite: true
          body: "[Clash](https://github.com/Dreamacro/clash) 规则集文件（包含 .dat、.mmdb 和 .metadb 文件）"
          file_glob: true
          file: ./clash/*

      - name: Git push assets to "clash" branch
        run: |
          cd ./clash/ || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b clash
          git add .
          git commit -m "Clash ruleset_geodata 文件更新于 ${update_version}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin clash

      - name: Commit and push `clash-ruleset` branch
        run: |
          cd ./clash-ruleset/ || exit 1
          git init
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git checkout -b clash-ruleset
          git add . && git commit -m "Clash rule-set 规则集文件更新于 ${update_version}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin clash-ruleset

      - name: Release and upload `sing-box` assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: sing-box
          tag: sing-box
          overwrite: true
          body: "[sing-box](https://github.com/SagerNet/sing-box) 规则集文件（包含 .db 文件）"
          file_glob: true
          file: ./sing-box/*

      - name: Git push assets to "sing-box" branch
        run: |
          cd ./sing-box/ || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b sing-box
          git add .
          git commit -m "sing-box ruleset_geodata 文件更新于 ${update_version}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin sing-box

      - name: Commit and push `sing-box-ruleset` branch
        run: |
          cd ./sing-box-ruleset/ || exit 1
          git init
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git checkout -b sing-box-ruleset
          git add . && git commit -m "sing-box rule_set 规则集文件更新于 ${update_version}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin sing-box-ruleset

      - name: Purge jsDelivr CDN
        run: |
          cd ./domains/ || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@domains/${file}"
          done
          cd ../ips/ || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@ips/${file}"
          done
          cd ../clash/ || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@clash/${file}"
          done
          cd ../clash-ruleset/ || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@clash-ruleset/${file}"
          done
          cd ../sing-box/ || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@sing-box/${file}"
          done
          cd ../sing-box-ruleset/ || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@sing-box-ruleset/${file}"
          done
